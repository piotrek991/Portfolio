DECLARE CURSOR TABLES_MAT
IS 
SELECT TABLE_NAME FROM USER_TABLES
WHERE TABLE_NAME IN ('DANE_PRZESL','DANE_PRZESLV2','DATA_NON_SPOL','DATA_SPOL');
BEGIN
    FOR RECORD IN TABLES_MAT
    LOOP
        DBMS_OUTPUT.PUT_LINE(RECORD.TABLE_NAME);
        EXECUTE IMMEDIATE 'TRUNCATE TABLE '|| RECORD.TABLE_NAME;
        EXECUTE IMMEDIATE 'DROP TABLE '|| RECORD.TABLE_NAME;
    END LOOP;
END;
/
CREATE GLOBAL TEMPORARY TABLE DANE_PRZESL 
ON COMMIT PRESERVE ROWS
AS
WITH DATA_MODIFY AS (
 SELECT PS.*,
    (1-K1/100)/NULLIF(K1/100,0) DZWIGNIA
    ,(PS.ZYSK_NETTO/NULLIF(PS.KAPITAL_WLASNY,0)) ROE
    FROM
    PS_DATA_RK_DF_202304 PS
)
, DANE_3 AS (
SELECT A.*,B.D_TO_DATE AS POROW_DATA
,B.PRZYCHOD_RAZEM LAST_PRZYCHODY
,B.DZWIGNIA LAST_DZWIGNIA
,B.ROS LAST_ROS
,B.ROE LAST_ROE
, CASE WHEN B.DZWIGNIA >= 0  THEN
    (A.DZWIGNIA - B.DZWIGNIA) ELSE NULL END ZMIANA_DZWIGNIA
, (A.ROS - B.ROS) ZMIANA_ROS
, (A.ROE - B.ROE) ZMIANA_ROE
, ((A.PRZYCHOD_RAZEM - B.PRZYCHOD_RAZEM)/NULLIF(B.PRZYCHOD_RAZEM,0))*100 ZMIANA_PRZYCHODY
, CASE WHEN A.CR < 0.5 AND A.WOD < 1 THEN 1 ELSE 0 END WL_CRWOD
, CASE WHEN A.QR < 0.4 AND A.WOD < 1 THEN 1 ELSE 0 END WL_QRWOD
, CASE WHEN A.K1 < 0 THEN 1 ELSE 0 END UTRATA_KW_PAS
, CASE WHEN A.WOZ > 100 THEN 1 ELSE 0 END PRZESLANKA_WOZ
FROM DATA_MODIFY A
LEFT JOIN DATA_MODIFY B ON A.P_REGON = B.P_REGON AND ADD_MONTHS(B.D_TO_DATE,12) = A.D_TO_DATE
WHERE A.D_MONTHS_NUMBER = 3 --AND A.WOZ IS NULL
AND A.D_TO_DATE < SYSDATE
)

,DANE_6 AS (
    SELECT A.*,B.D_TO_DATE AS POROW_DATA
    ,B.PRZYCHOD_RAZEM LAST_PRZYCHODY
    ,B.DZWIGNIA LAST_DZWIGNIA
    ,B.ROS LAST_ROS
    ,B.ROE LAST_ROE
    , CASE WHEN B.DZWIGNIA >= 0  THEN
        (A.DZWIGNIA - B.DZWIGNIA) ELSE NULL END ZMIANA_DZWIGNIA
    , (A.ROS - B.ROS) ZMIANA_ROS
    , (A.ROE - B.ROE) ZMIANA_ROE
    , ((A.PRZYCHOD_RAZEM - B.PRZYCHOD_RAZEM)/NULLIF(B.PRZYCHOD_RAZEM,0))*100 ZMIANA_PRZYCHODY   
    , CASE WHEN A.CR < 0.5 AND A.WOD < 1 THEN 1 ELSE 0 END WL_CRWOD
    , CASE WHEN A.QR < 0.4 AND A.WOD < 1 THEN 1 ELSE 0 END WL_QRWOD
    , CASE WHEN A.K1 < 0 THEN 1 ELSE 0 END UTRATA_KW_PAS
    , CASE WHEN A.WOZ > 100 THEN 1 ELSE 0 END PRZESLANKA_WOZ
    FROM DATA_MODIFY A
    LEFT JOIN DATA_MODIFY B ON A.P_REGON = B.P_REGON AND ADD_MONTHS(B.D_TO_DATE,12) = A.D_TO_DATE
    WHERE A.D_MONTHS_NUMBER = 6-- AND A.WOZ IS NULL
    AND A.D_TO_DATE < SYSDATE
)
,DANE_9 AS (
    SELECT A.*,B.D_TO_DATE AS POROW_DATA
    ,B.PRZYCHOD_RAZEM LAST_PRZYCHODY
    ,B.DZWIGNIA LAST_DZWIGNIA
    ,B.ROS LAST_ROS
    ,B.ROE LAST_ROE
    , CASE WHEN B.DZWIGNIA >= 0  THEN
        (A.DZWIGNIA - B.DZWIGNIA) ELSE NULL END ZMIANA_DZWIGNIA
    , (A.ROS - B.ROS) ZMIANA_ROS
    , (A.ROE - B.ROE) ZMIANA_ROE
    , (A.PRZYCHOD_RAZEM - B.PRZYCHOD_RAZEM)/NULLIF(B.PRZYCHOD_RAZEM,0)*100 ZMIANA_PRZYCHODY
    , CASE WHEN A.CR < 0.5 AND A.WOD < 1 THEN 1 ELSE 0 END WL_CRWOD
    , CASE WHEN A.QR < 0.4 AND A.WOD < 1 THEN 1 ELSE 0 END WL_QRWOD
    , CASE WHEN A.K1 < 0 THEN 1 ELSE 0 END UTRATA_KW_PAS
    , CASE WHEN A.WOZ > 100 THEN 1 ELSE 0 END PRZESLANKA_WOZ
    FROM DATA_MODIFY A
    LEFT JOIN DATA_MODIFY B ON A.P_REGON = B.P_REGON AND ADD_MONTHS(B.D_TO_DATE,12) = A.D_TO_DATE
    WHERE A.D_MONTHS_NUMBER = 9 --AND A.WOZ IS NULL
    AND A.D_TO_DATE < SYSDATE
)

,DANE_12 AS (
    SELECT A.*,B.D_TO_DATE AS POROW_DATA
    ,B.PRZYCHOD_RAZEM LAST_PRZYCHODY
    ,B.DZWIGNIA LAST_DZWIGNIA
    ,B.ROS LAST_ROS
    ,B.ROE LAST_ROE
    , CASE WHEN B.DZWIGNIA >= 0  THEN
        (A.DZWIGNIA - B.DZWIGNIA) ELSE NULL END ZMIANA_DZWIGNIA
    , (A.ROS - B.ROS) ZMIANA_ROS
    , (A.ROE - B.ROE) ZMIANA_ROE
    , ((A.PRZYCHOD_RAZEM - B.PRZYCHOD_RAZEM)/NULLIF(B.PRZYCHOD_RAZEM,0))*100 ZMIANA_PRZYCHODY
    , CASE WHEN A.CR < 0.5 AND A.WOD < 1 THEN 1 ELSE 0 END WL_CRWOD
    , CASE WHEN A.QR < 0.4 AND A.WOD < 1 THEN 1 ELSE 0 END WL_QRWOD
    , CASE WHEN A.K1 < 0 THEN 1 ELSE 0 END UTRATA_KW_PAS
    , CASE WHEN A.WOZ > 100 THEN 1 ELSE 0 END PRZESLANKA_WOZ
    FROM DATA_MODIFY A
    LEFT JOIN DATA_MODIFY B ON A.P_REGON = B.P_REGON AND ADD_MONTHS(B.D_TO_DATE,12) = A.D_TO_DATE
    WHERE A.D_MONTHS_NUMBER = 12 --AND A.WOZ IS NULL
    AND A.D_TO_DATE < SYSDATE
)

SELECT A.* FROM (
SELECT D.* FROM DANE_3 D
UNION ALL
SELECT D.* FROM DANE_6 D
UNION ALL
SELECT D.* FROM DANE_9 D
UNION ALL
SELECT D.* FROM DANE_12 D
) A

/

CREATE GLOBAL TEMPORARY TABLE DANE_PRZESLV2
ON COMMIT PRESERVE ROWS 
AS
SELECT A.DATA_DANYCH,A.OBW_SPR,
B.*,C.REG_PES,C.SUMA_KAPITAL_MSR_PLN,C.KOSZYK_ACT
FROM (
SELECT D.P_REGON,AC.DATA_DANYCH, MAX(D.D_TO_DATE) AS OBW_SPR
FROM DANE_PRZESL D
RIGHT JOIN (
    SELECT DISTINCT DATA_DANYCH FROM AC_RAPORT_MSR
) AC
    ON AC.DATA_DANYCH >= D.D_TO_DATE
GROUP BY D.P_REGON,AC.DATA_DANYCH
) A LEFT JOIN DANE_PRZESL B
    ON A.P_REGON = B.P_REGON AND A.OBW_SPR = B.D_TO_DATE
    JOIN (
        SELECT DATA_DANYCH,REG_PES,SUM(KAPITAL_MSR_PLN) SUMA_KAPITAL_MSR_PLN,MAX(KOSZYK_MSSF) KOSZYK_ACT FROM AC_RAPORT_MSR
        --WHERE DATA_DANYCH = (SELECT MAX(DATA_DANYCH) FROM AC_RAPORT_MSR)
        GROUP BY DATA_DANYCH,REG_PES
    ) C
        ON C.REG_PES = A.P_REGON AND C.DATA_DANYCH = A.DATA_DANYCH;

/
CREATE GLOBAL TEMPORARY TABLE DATA_NON_SPOL
ON COMMIT PRESERVE ROWS
AS 
SELECT A.DATA_DANYCH,A.P_REGON,A.P_NIP,A.NAZWA,A.WL_CRWOD,A.WL_QRWOD,A.UTRATA_KW_PAS,A.OBW_SPR,A.KOSZYK_ACT,A.SUMA_KAPITAL_MSR_PLN
, CASE WHEN 
    (SUM(WL_QRWOD) OVER(PARTITION BY P_REGON ORDER BY DATA_DANYCH ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)) >=6 THEN 1 ELSE 0
    END UTRATA_QR_WOD
, CASE WHEN 
    (SUM(WL_CRWOD) OVER(PARTITION BY P_REGON ORDER BY DATA_DANYCH ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)) >=3 THEN 1 ELSE 0
    END UTRATA_CR_WOD
,CASE WHEN ZMIANA_PRZYCHODY <= -20 AND ZMIANA_DZWIGNIA >= 1 THEN 1 ELSE 0 END WL_DZWIGNIA_PRZYCHODY
,CASE WHEN ZMIANA_ROS <= -3 AND ZMIANA_ROE<=-2 THEN 1 ELSE 0 END WL_ROS_ROE
 ,A.K1, A.QR, A.CR, A.WOD, A.ROS,A.LAST_ROS, A.ZMIANA_ROS,A.ROE, A.LAST_ROE, A.ZMIANA_ROE, A.PRZYCHOD_RAZEM,A.LAST_PRZYCHODY, A.ZMIANA_PRZYCHODY, A.DZWIGNIA, A.LAST_DZWIGNIA, A.ZMIANA_DZWIGNIA, A.POROW_DATA
FROM DANE_PRZESLV2 A
WHERE A.WOZ IS NULL 
;

/

CREATE GLOBAL TEMPORARY TABLE DATA_SPOL
ON COMMIT PRESERVE ROWS
AS
SELECT A.DATA_DANYCH,A.P_REGON,A.P_NIP,A.NAZWA,A.OBW_SPR,A.KOSZYK_ACT,A.SUMA_KAPITAL_MSR_PLN,
    CASE WHEN 
        (SUM(PRZESLANKA_WOZ) OVER(PARTITION BY P_REGON ORDER BY DATA_DANYCH ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)) >=6 THEN 1 ELSE 0
        END UTRATA_WOZ
    FROM DANE_PRZESLV2 A
    WHERE A.WOZ IS NOT NULL AND ABS(WOZ) < 1000000

/

SELECT * FROM DATA_SPOL WHERE UTRATA_WOZ = 1
AND DATA_DANYCH = '23/03/31' AND EXTRACT(YEAR FROM OBW_SPR) >= 2022
AND SUMA_KAPITAL_MSR_PLN > 1000000
AND KOSZYK_ACT = 1;

SELECT DATA_DANYCH,	P_REGON,P_NIP,NAZWA,WL_CRWOD,WL_QRWOD,UTRATA_KW_PAS,OBW_SPR,KOSZYK_ACT,UTRATA_QR_WOD,UTRATA_CR_WOD,WL_DZWIGNIA_PRZYCHODY,WL_ROS_ROE,
A.K1, A.QR, A.CR, A.WOD, A.ROS,A.LAST_ROS, A.ZMIANA_ROS,A.ROE, A.LAST_ROE, A.ZMIANA_ROE, A.PRZYCHOD_RAZEM,A.LAST_PRZYCHODY, A.ZMIANA_PRZYCHODY, A.DZWIGNIA, A.LAST_DZWIGNIA, A.ZMIANA_DZWIGNIA, A.POROW_DATA
FROM DATA_NON_SPOL A WHERE
(WL_CRWOD =1 OR WL_QRWOD = 1 OR UTRATA_KW_PAS = 1 OR UTRATA_QR_WOD = 1 OR UTRATA_CR_WOD = 1 OR 
WL_DZWIGNIA_PRZYCHODY = 1 OR WL_ROS_ROE = 1)
AND DATA_DANYCH = '23/03/31'
AND EXTRACT(YEAR FROM OBW_SPR) >= 2022
AND SUMA_KAPITAL_MSR_PLN > 1000000
AND KOSZYK_ACT = 1;


