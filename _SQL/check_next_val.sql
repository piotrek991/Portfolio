CREATE TABLE LEAGUES (
    LEAGUE_ID INTEGER,
    LEAGUE_NAME VARCHAR2(100) NOT NULL,
    COUNTRY VARCHAR2(100) NOT NULL,
    CONSTRAINT LEAGUES_PK PRIMARY KEY (LEAGUE_ID)
);

/

CREATE TABLE TEAMS (
    TEAMS_ID INTEGER,
    TEAMS_NAME VARCHAR2(100),
    LEAGUE_ID INTEGER,
    CONSTRAINT TEAMS_PK PRIMARY KEY(TEAMS_ID),
    CONSTRAINT LEAGUE_TEAMS_FK FOREIGN KEY(LEAGUE_ID) REFERENCES LEAGUES(LEAGUE_ID)
    ON DELETE SET NULL
);


CREATE TABLE FOOTBALLERS_DATA (
    FOOTBALLER_ID INTEGER GENERATED BY DEFAULT ON NULL AS IDENTITY START WITH 1 INCREMENT BY 1 CACHE 5,
    FNAME VARCHAR2(100),
    LEAGUE_ID INTEGER NOT NULL,
    ACT_TEAM_ID INTEGER NOT NULL,
    CONSTRAINT FOOTBALLERS_DATA_PK PRIMARY KEY(FOOTBALLER_ID),
    CONSTRAINT LEAGUE_FOOTABLLERS_FK FOREIGN KEY(LEAGUE_ID) REFERENCES LEAGUES(LEAGUE_ID)
    ON DELETE SET NULL,
    CONSTRAINT TEAM_FOOTABLLERS_FK FOREIGN KEY(ACT_TEAM_ID) REFERENCES TEAMS(TEAMS_ID)
    ON DELETE SET NULL
);

/

CREATE OR REPLACE TRIGGER PRIMARY_KEY_CHECK
BEFORE INSERT ON FOOTBALLERS_DATA
FOR EACH ROW
DECLARE
    TYPE fot_id_numbers IS TABLE OF INTEGER;
    actual fot_id_numbers;
    potential_number NUMBER := :NEW.FOOTBALLER_ID;
BEGIN
    SELECT FOOTBALLER_ID 
        BULK COLLECT INTO actual
        FROM FOOTBALLERS_DATA;
    while potential_number member of actual
    loop
        potential_number := "ISEQ$$_78469".nextval;
    end loop;
    :new.FOOTBALLER_ID := potential_number;
END PRIMARY_KEY_CHECK;










 

